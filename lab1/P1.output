State 44 conflicts: 11 shift/reduce


Grammar

    0 $accept: Goal $end

    1 Goal: MacroDefinitionList MainClass TypeDeclarationList

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    3 TypeDeclarationList: %empty
    4                    | TypeDeclarationList TypeDeclaration

    5 TypeDeclaration: CLASS IDENTIFIER OPEN_CURLY variable_declaration_list method_declaration_list CLOSED_CURLY
    6                | CLASS IDENTIFIER EXTENDS IDENTIFIER OPEN_CURLY variable_declaration_list method_declaration_list CLOSED_CURLY

    7 variable_declaration: TYPE IDENTIFIER

    8 variable_declaration_list: %empty
    9                          | variable_declaration_list variable_declaration SEMICOLON

   10 argument_list: %empty
   11              | variable_declaration extra_arguments

   12 extra_arguments: %empty
   13                | extra_arguments COMMA variable_declaration

   14 method_declaration_list: %empty
   15                        | method_declaration_list method_declaration

   16 method_content: %empty
   17               | INBUILT_TYPE IDENTIFIER SEMICOLON method_content
   18               | IDENTIFIER follows_identifier_in_method
   19               | other_statement statement_list

   20 follows_identifier_in_method: follows_identifier_in_statement statement_list
   21                             | IDENTIFIER SEMICOLON method_content

   22 method_declaration: PUBLIC TYPE IDENTIFIER OPEN_PAREN argument_list CLOSED_PAREN OPEN_CURLY method_content RETURN expression SEMICOLON CLOSED_CURLY

   23 INBUILT_TYPE: INTEGER_TYPE OPEN_BOX CLOSED_BOX
   24             | INTEGER_TYPE
   25             | BOOLEAN_TYPE

   26 TYPE: INBUILT_TYPE
   27     | IDENTIFIER

   28 statement_list: %empty
   29               | statement_list statement

   30 other_statement: PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON
   31                | WHILE OPEN_PAREN expression CLOSED_PAREN statement
   32                | IF OPEN_PAREN expression CLOSED_PAREN statement ELSE statement
   33                | IF OPEN_PAREN expression CLOSED_PAREN statement

   34 follows_identifier_in_statement: EQUALS expression SEMICOLON
   35                                | OPEN_BOX expression CLOSED_BOX EQUALS expression SEMICOLON

   36 statement: OPEN_CURLY statement_list CLOSED_CURLY
   37          | macro_statement_call
   38          | IDENTIFIER follows_identifier_in_statement
   39          | other_statement

   40 macro_statement_call: IDENTIFIER OPEN_PAREN macro_param_list CLOSED_PAREN SEMICOLON

   41 macro_expression_call: IDENTIFIER OPEN_PAREN macro_param_list CLOSED_PAREN

   42 function_call: IDENTIFIER OPEN_PAREN parameter_list CLOSED_PAREN

   43 parameter_list: %empty
   44               | expression extra_parameter_list

   45 extra_parameter_list: %empty
   46                     | extra_parameter_list COMMA expression

   47 expression: prim_exp follows_primexp
   48           | macro_expression_call

   49 follows_primexp: AND prim_exp
   50                | OR prim_exp
   51                | NOT EQUALS prim_exp
   52                | LESS_THAN EQUALS prim_exp
   53                | PLUS prim_exp
   54                | MINUS prim_exp
   55                | MULT prim_exp
   56                | DIV prim_exp
   57                | OPEN_BOX prim_exp CLOSED_BOX
   58                | DOTLENGTH
   59                | %empty
   60                | DOT function_call

   61 prim_exp: INTEGER_LITERAL
   62         | TRUE_LITERAL
   63         | FALSE_LITERAL
   64         | IDENTIFIER
   65         | THIS
   66         | NEW INTEGER_TYPE OPEN_BOX expression CLOSED_BOX
   67         | NEW IDENTIFIER OPEN_PAREN CLOSED_PAREN
   68         | NOT expression
   69         | OPEN_PAREN expression CLOSED_PAREN

   70 macro_param_list: %empty
   71                 | expression macro_extra_param_list

   72 macro_extra_param_list: %empty
   73                       | macro_extra_param_list COMMA expression

   74 MacroDefinitionList: %empty
   75                    | MacroDefinitionList MacroDefinition

   76 MacroDefinition: MacroDefExpression
   77                | MacroDefStatement

   78 macro_arg_list: %empty
   79               | IDENTIFIER macro_extra_arg_list

   80 macro_extra_arg_list: %empty
   81                     | macro_extra_arg_list COMMA IDENTIFIER

   82 MacroDefStatement: DEFINE IDENTIFIER OPEN_PAREN macro_arg_list CLOSED_PAREN OPEN_CURLY statement_list CLOSED_CURLY

   83 MacroDefExpression: DEFINE IDENTIFIER OPEN_PAREN macro_arg_list CLOSED_PAREN OPEN_PAREN expression CLOSED_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER_LITERAL (258) 61
IDENTIFIER (259) 2 5 6 7 17 18 21 22 27 38 40 41 42 64 67 79 81 82
    83
PLUS (260) 53
MINUS (261) 54
MULT (262) 55
DIV (263) 56
EQUALS (264) 34 35 51 52
NOT (265) 51 68
AND (266) 49
OR (267) 50
LESS_THAN (268) 52
DOT (269) 60
OPEN_PAREN (270) 2 22 30 31 32 33 40 41 42 67 69 82 83
OPEN_BOX (271) 2 23 35 57 66
CLOSED_BOX (272) 2 23 35 57 66
OPEN_CURLY (273) 2 5 6 22 36 82
CLOSED_CURLY (274) 2 5 6 22 36 82
CLASS (275) 2 5 6
PUBLIC (276) 2 22
STATIC (277) 2
VOID (278) 2
MAIN (279) 2
PRINT_FN (280) 2 30
RETURN (281) 22
INTEGER_TYPE (282) 23 24 66
BOOLEAN_TYPE (283) 25
IF (284) 32 33
WHILE (285) 31
TRUE_LITERAL (286) 62
FALSE_LITERAL (287) 63
THIS (288) 65
NEW (289) 66 67
DOTLENGTH (290) 58
DEFINE (291) 82 83
SEMICOLON (292) 2 9 17 21 22 30 34 35 40
COMMA (293) 13 46 73 81
STRING (294) 2
EXTENDS (295) 6
CLOSED_PAREN (296) 2 22 30 31 32 33 40 41 42 67 69 82 83
ELSE (297) 32


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
Goal (44)
    on left: 1, on right: 0
MainClass (45)
    on left: 2, on right: 1
TypeDeclarationList (46)
    on left: 3 4, on right: 1 4
TypeDeclaration (47)
    on left: 5 6, on right: 4
variable_declaration (48)
    on left: 7, on right: 9 11 13
variable_declaration_list (49)
    on left: 8 9, on right: 5 6 9
argument_list (50)
    on left: 10 11, on right: 22
extra_arguments (51)
    on left: 12 13, on right: 11 13
method_declaration_list (52)
    on left: 14 15, on right: 5 6 15
method_content (53)
    on left: 16 17 18 19, on right: 17 21 22
follows_identifier_in_method (54)
    on left: 20 21, on right: 18
method_declaration (55)
    on left: 22, on right: 15
INBUILT_TYPE (56)
    on left: 23 24 25, on right: 17 26
TYPE (57)
    on left: 26 27, on right: 7 22
statement_list (58)
    on left: 28 29, on right: 19 20 29 36 82
other_statement (59)
    on left: 30 31 32 33, on right: 19 39
follows_identifier_in_statement (60)
    on left: 34 35, on right: 20 38
statement (61)
    on left: 36 37 38 39, on right: 29 31 32 33
macro_statement_call (62)
    on left: 40, on right: 37
macro_expression_call (63)
    on left: 41, on right: 48
function_call (64)
    on left: 42, on right: 60
parameter_list (65)
    on left: 43 44, on right: 42
extra_parameter_list (66)
    on left: 45 46, on right: 44 46
expression (67)
    on left: 47 48, on right: 2 22 30 31 32 33 34 35 44 46 66 68 69
    71 73 83
follows_primexp (68)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60, on right: 47
prim_exp (69)
    on left: 61 62 63 64 65 66 67 68 69, on right: 47 49 50 51 52 53
    54 55 56 57
macro_param_list (70)
    on left: 70 71, on right: 40 41
macro_extra_param_list (71)
    on left: 72 73, on right: 71 73
MacroDefinitionList (72)
    on left: 74 75, on right: 1 75
MacroDefinition (73)
    on left: 76 77, on right: 75
macro_arg_list (74)
    on left: 78 79, on right: 82 83
macro_extra_arg_list (75)
    on left: 80 81, on right: 79 81
MacroDefStatement (76)
    on left: 82, on right: 77
MacroDefExpression (77)
    on left: 83, on right: 76


State 0

    0 $accept: . Goal $end

    $default  reduce using rule 74 (MacroDefinitionList)

    Goal                 go to state 1
    MacroDefinitionList  go to state 2


State 1

    0 $accept: Goal . $end

    $end  shift, and go to state 3


State 2

    1 Goal: MacroDefinitionList . MainClass TypeDeclarationList
   75 MacroDefinitionList: MacroDefinitionList . MacroDefinition

    CLASS   shift, and go to state 4
    DEFINE  shift, and go to state 5

    MainClass           go to state 6
    MacroDefinition     go to state 7
    MacroDefStatement   go to state 8
    MacroDefExpression  go to state 9


State 3

    0 $accept: Goal $end .

    $default  accept


State 4

    2 MainClass: CLASS . IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    IDENTIFIER  shift, and go to state 10


State 5

   82 MacroDefStatement: DEFINE . IDENTIFIER OPEN_PAREN macro_arg_list CLOSED_PAREN OPEN_CURLY statement_list CLOSED_CURLY
   83 MacroDefExpression: DEFINE . IDENTIFIER OPEN_PAREN macro_arg_list CLOSED_PAREN OPEN_PAREN expression CLOSED_PAREN

    IDENTIFIER  shift, and go to state 11


State 6

    1 Goal: MacroDefinitionList MainClass . TypeDeclarationList

    $default  reduce using rule 3 (TypeDeclarationList)

    TypeDeclarationList  go to state 12


State 7

   75 MacroDefinitionList: MacroDefinitionList MacroDefinition .

    $default  reduce using rule 75 (MacroDefinitionList)


State 8

   77 MacroDefinition: MacroDefStatement .

    $default  reduce using rule 77 (MacroDefinition)


State 9

   76 MacroDefinition: MacroDefExpression .

    $default  reduce using rule 76 (MacroDefinition)


State 10

    2 MainClass: CLASS IDENTIFIER . OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    OPEN_CURLY  shift, and go to state 13


State 11

   82 MacroDefStatement: DEFINE IDENTIFIER . OPEN_PAREN macro_arg_list CLOSED_PAREN OPEN_CURLY statement_list CLOSED_CURLY
   83 MacroDefExpression: DEFINE IDENTIFIER . OPEN_PAREN macro_arg_list CLOSED_PAREN OPEN_PAREN expression CLOSED_PAREN

    OPEN_PAREN  shift, and go to state 14


State 12

    1 Goal: MacroDefinitionList MainClass TypeDeclarationList .
    4 TypeDeclarationList: TypeDeclarationList . TypeDeclaration

    CLASS  shift, and go to state 15

    $default  reduce using rule 1 (Goal)

    TypeDeclaration  go to state 16


State 13

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY . PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    PUBLIC  shift, and go to state 17


State 14

   82 MacroDefStatement: DEFINE IDENTIFIER OPEN_PAREN . macro_arg_list CLOSED_PAREN OPEN_CURLY statement_list CLOSED_CURLY
   83 MacroDefExpression: DEFINE IDENTIFIER OPEN_PAREN . macro_arg_list CLOSED_PAREN OPEN_PAREN expression CLOSED_PAREN

    IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 78 (macro_arg_list)

    macro_arg_list  go to state 19


State 15

    5 TypeDeclaration: CLASS . IDENTIFIER OPEN_CURLY variable_declaration_list method_declaration_list CLOSED_CURLY
    6                | CLASS . IDENTIFIER EXTENDS IDENTIFIER OPEN_CURLY variable_declaration_list method_declaration_list CLOSED_CURLY

    IDENTIFIER  shift, and go to state 20


State 16

    4 TypeDeclarationList: TypeDeclarationList TypeDeclaration .

    $default  reduce using rule 4 (TypeDeclarationList)


State 17

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC . STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    STATIC  shift, and go to state 21


State 18

   79 macro_arg_list: IDENTIFIER . macro_extra_arg_list

    $default  reduce using rule 80 (macro_extra_arg_list)

    macro_extra_arg_list  go to state 22


State 19

   82 MacroDefStatement: DEFINE IDENTIFIER OPEN_PAREN macro_arg_list . CLOSED_PAREN OPEN_CURLY statement_list CLOSED_CURLY
   83 MacroDefExpression: DEFINE IDENTIFIER OPEN_PAREN macro_arg_list . CLOSED_PAREN OPEN_PAREN expression CLOSED_PAREN

    CLOSED_PAREN  shift, and go to state 23


State 20

    5 TypeDeclaration: CLASS IDENTIFIER . OPEN_CURLY variable_declaration_list method_declaration_list CLOSED_CURLY
    6                | CLASS IDENTIFIER . EXTENDS IDENTIFIER OPEN_CURLY variable_declaration_list method_declaration_list CLOSED_CURLY

    OPEN_CURLY  shift, and go to state 24
    EXTENDS     shift, and go to state 25


State 21

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC . VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    VOID  shift, and go to state 26


State 22

   79 macro_arg_list: IDENTIFIER macro_extra_arg_list .
   81 macro_extra_arg_list: macro_extra_arg_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 27

    $default  reduce using rule 79 (macro_arg_list)


State 23

   82 MacroDefStatement: DEFINE IDENTIFIER OPEN_PAREN macro_arg_list CLOSED_PAREN . OPEN_CURLY statement_list CLOSED_CURLY
   83 MacroDefExpression: DEFINE IDENTIFIER OPEN_PAREN macro_arg_list CLOSED_PAREN . OPEN_PAREN expression CLOSED_PAREN

    OPEN_PAREN  shift, and go to state 28
    OPEN_CURLY  shift, and go to state 29


State 24

    5 TypeDeclaration: CLASS IDENTIFIER OPEN_CURLY . variable_declaration_list method_declaration_list CLOSED_CURLY

    $default  reduce using rule 8 (variable_declaration_list)

    variable_declaration_list  go to state 30


State 25

    6 TypeDeclaration: CLASS IDENTIFIER EXTENDS . IDENTIFIER OPEN_CURLY variable_declaration_list method_declaration_list CLOSED_CURLY

    IDENTIFIER  shift, and go to state 31


State 26

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID . MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    MAIN  shift, and go to state 32


State 27

   81 macro_extra_arg_list: macro_extra_arg_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 33


State 28

   83 MacroDefExpression: DEFINE IDENTIFIER OPEN_PAREN macro_arg_list CLOSED_PAREN OPEN_PAREN . expression CLOSED_PAREN

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    macro_expression_call  go to state 42
    expression             go to state 43
    prim_exp               go to state 44


State 29

   82 MacroDefStatement: DEFINE IDENTIFIER OPEN_PAREN macro_arg_list CLOSED_PAREN OPEN_CURLY . statement_list CLOSED_CURLY

    $default  reduce using rule 28 (statement_list)

    statement_list  go to state 45


State 30

    5 TypeDeclaration: CLASS IDENTIFIER OPEN_CURLY variable_declaration_list . method_declaration_list CLOSED_CURLY
    9 variable_declaration_list: variable_declaration_list . variable_declaration SEMICOLON

    IDENTIFIER    shift, and go to state 46
    INTEGER_TYPE  shift, and go to state 47
    BOOLEAN_TYPE  shift, and go to state 48

    $default  reduce using rule 14 (method_declaration_list)

    variable_declaration     go to state 49
    method_declaration_list  go to state 50
    INBUILT_TYPE             go to state 51
    TYPE                     go to state 52


State 31

    6 TypeDeclaration: CLASS IDENTIFIER EXTENDS IDENTIFIER . OPEN_CURLY variable_declaration_list method_declaration_list CLOSED_CURLY

    OPEN_CURLY  shift, and go to state 53


State 32

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN . OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    OPEN_PAREN  shift, and go to state 54


State 33

   81 macro_extra_arg_list: macro_extra_arg_list COMMA IDENTIFIER .

    $default  reduce using rule 81 (macro_extra_arg_list)


State 34

   61 prim_exp: INTEGER_LITERAL .

    $default  reduce using rule 61 (prim_exp)


State 35

   41 macro_expression_call: IDENTIFIER . OPEN_PAREN macro_param_list CLOSED_PAREN
   64 prim_exp: IDENTIFIER .

    OPEN_PAREN  shift, and go to state 55

    $default  reduce using rule 64 (prim_exp)


State 36

   68 prim_exp: NOT . expression

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    macro_expression_call  go to state 42
    expression             go to state 56
    prim_exp               go to state 44


State 37

   69 prim_exp: OPEN_PAREN . expression CLOSED_PAREN

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    macro_expression_call  go to state 42
    expression             go to state 57
    prim_exp               go to state 44


State 38

   62 prim_exp: TRUE_LITERAL .

    $default  reduce using rule 62 (prim_exp)


State 39

   63 prim_exp: FALSE_LITERAL .

    $default  reduce using rule 63 (prim_exp)


State 40

   65 prim_exp: THIS .

    $default  reduce using rule 65 (prim_exp)


State 41

   66 prim_exp: NEW . INTEGER_TYPE OPEN_BOX expression CLOSED_BOX
   67         | NEW . IDENTIFIER OPEN_PAREN CLOSED_PAREN

    IDENTIFIER    shift, and go to state 58
    INTEGER_TYPE  shift, and go to state 59


State 42

   48 expression: macro_expression_call .

    $default  reduce using rule 48 (expression)


State 43

   83 MacroDefExpression: DEFINE IDENTIFIER OPEN_PAREN macro_arg_list CLOSED_PAREN OPEN_PAREN expression . CLOSED_PAREN

    CLOSED_PAREN  shift, and go to state 60


State 44

   47 expression: prim_exp . follows_primexp

    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    MULT       shift, and go to state 63
    DIV        shift, and go to state 64
    NOT        shift, and go to state 65
    AND        shift, and go to state 66
    OR         shift, and go to state 67
    LESS_THAN  shift, and go to state 68
    DOT        shift, and go to state 69
    OPEN_BOX   shift, and go to state 70
    DOTLENGTH  shift, and go to state 71

    PLUS       [reduce using rule 59 (follows_primexp)]
    MINUS      [reduce using rule 59 (follows_primexp)]
    MULT       [reduce using rule 59 (follows_primexp)]
    DIV        [reduce using rule 59 (follows_primexp)]
    NOT        [reduce using rule 59 (follows_primexp)]
    AND        [reduce using rule 59 (follows_primexp)]
    OR         [reduce using rule 59 (follows_primexp)]
    LESS_THAN  [reduce using rule 59 (follows_primexp)]
    DOT        [reduce using rule 59 (follows_primexp)]
    OPEN_BOX   [reduce using rule 59 (follows_primexp)]
    DOTLENGTH  [reduce using rule 59 (follows_primexp)]
    $default   reduce using rule 59 (follows_primexp)

    follows_primexp  go to state 72


State 45

   29 statement_list: statement_list . statement
   82 MacroDefStatement: DEFINE IDENTIFIER OPEN_PAREN macro_arg_list CLOSED_PAREN OPEN_CURLY statement_list . CLOSED_CURLY

    IDENTIFIER    shift, and go to state 73
    OPEN_CURLY    shift, and go to state 74
    CLOSED_CURLY  shift, and go to state 75
    PRINT_FN      shift, and go to state 76
    IF            shift, and go to state 77
    WHILE         shift, and go to state 78

    other_statement       go to state 79
    statement             go to state 80
    macro_statement_call  go to state 81


State 46

   27 TYPE: IDENTIFIER .

    $default  reduce using rule 27 (TYPE)


State 47

   23 INBUILT_TYPE: INTEGER_TYPE . OPEN_BOX CLOSED_BOX
   24             | INTEGER_TYPE .

    OPEN_BOX  shift, and go to state 82

    $default  reduce using rule 24 (INBUILT_TYPE)


State 48

   25 INBUILT_TYPE: BOOLEAN_TYPE .

    $default  reduce using rule 25 (INBUILT_TYPE)


State 49

    9 variable_declaration_list: variable_declaration_list variable_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 83


State 50

    5 TypeDeclaration: CLASS IDENTIFIER OPEN_CURLY variable_declaration_list method_declaration_list . CLOSED_CURLY
   15 method_declaration_list: method_declaration_list . method_declaration

    CLOSED_CURLY  shift, and go to state 84
    PUBLIC        shift, and go to state 85

    method_declaration  go to state 86


State 51

   26 TYPE: INBUILT_TYPE .

    $default  reduce using rule 26 (TYPE)


State 52

    7 variable_declaration: TYPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 87


State 53

    6 TypeDeclaration: CLASS IDENTIFIER EXTENDS IDENTIFIER OPEN_CURLY . variable_declaration_list method_declaration_list CLOSED_CURLY

    $default  reduce using rule 8 (variable_declaration_list)

    variable_declaration_list  go to state 88


State 54

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN . STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    STRING  shift, and go to state 89


State 55

   41 macro_expression_call: IDENTIFIER OPEN_PAREN . macro_param_list CLOSED_PAREN

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    $default  reduce using rule 70 (macro_param_list)

    macro_expression_call  go to state 42
    expression             go to state 90
    prim_exp               go to state 44
    macro_param_list       go to state 91


State 56

   68 prim_exp: NOT expression .

    $default  reduce using rule 68 (prim_exp)


State 57

   69 prim_exp: OPEN_PAREN expression . CLOSED_PAREN

    CLOSED_PAREN  shift, and go to state 92


State 58

   67 prim_exp: NEW IDENTIFIER . OPEN_PAREN CLOSED_PAREN

    OPEN_PAREN  shift, and go to state 93


State 59

   66 prim_exp: NEW INTEGER_TYPE . OPEN_BOX expression CLOSED_BOX

    OPEN_BOX  shift, and go to state 94


State 60

   83 MacroDefExpression: DEFINE IDENTIFIER OPEN_PAREN macro_arg_list CLOSED_PAREN OPEN_PAREN expression CLOSED_PAREN .

    $default  reduce using rule 83 (MacroDefExpression)


State 61

   53 follows_primexp: PLUS . prim_exp

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 95
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    prim_exp  go to state 96


State 62

   54 follows_primexp: MINUS . prim_exp

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 95
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    prim_exp  go to state 97


State 63

   55 follows_primexp: MULT . prim_exp

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 95
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    prim_exp  go to state 98


State 64

   56 follows_primexp: DIV . prim_exp

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 95
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    prim_exp  go to state 99


State 65

   51 follows_primexp: NOT . EQUALS prim_exp

    EQUALS  shift, and go to state 100


State 66

   49 follows_primexp: AND . prim_exp

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 95
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    prim_exp  go to state 101


State 67

   50 follows_primexp: OR . prim_exp

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 95
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    prim_exp  go to state 102


State 68

   52 follows_primexp: LESS_THAN . EQUALS prim_exp

    EQUALS  shift, and go to state 103


State 69

   60 follows_primexp: DOT . function_call

    IDENTIFIER  shift, and go to state 104

    function_call  go to state 105


State 70

   57 follows_primexp: OPEN_BOX . prim_exp CLOSED_BOX

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 95
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    prim_exp  go to state 106


State 71

   58 follows_primexp: DOTLENGTH .

    $default  reduce using rule 58 (follows_primexp)


State 72

   47 expression: prim_exp follows_primexp .

    $default  reduce using rule 47 (expression)


State 73

   38 statement: IDENTIFIER . follows_identifier_in_statement
   40 macro_statement_call: IDENTIFIER . OPEN_PAREN macro_param_list CLOSED_PAREN SEMICOLON

    EQUALS      shift, and go to state 107
    OPEN_PAREN  shift, and go to state 108
    OPEN_BOX    shift, and go to state 109

    follows_identifier_in_statement  go to state 110


State 74

   36 statement: OPEN_CURLY . statement_list CLOSED_CURLY

    $default  reduce using rule 28 (statement_list)

    statement_list  go to state 111


State 75

   82 MacroDefStatement: DEFINE IDENTIFIER OPEN_PAREN macro_arg_list CLOSED_PAREN OPEN_CURLY statement_list CLOSED_CURLY .

    $default  reduce using rule 82 (MacroDefStatement)


State 76

   30 other_statement: PRINT_FN . OPEN_PAREN expression CLOSED_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 112


State 77

   32 other_statement: IF . OPEN_PAREN expression CLOSED_PAREN statement ELSE statement
   33                | IF . OPEN_PAREN expression CLOSED_PAREN statement

    OPEN_PAREN  shift, and go to state 113


State 78

   31 other_statement: WHILE . OPEN_PAREN expression CLOSED_PAREN statement

    OPEN_PAREN  shift, and go to state 114


State 79

   39 statement: other_statement .

    $default  reduce using rule 39 (statement)


State 80

   29 statement_list: statement_list statement .

    $default  reduce using rule 29 (statement_list)


State 81

   37 statement: macro_statement_call .

    $default  reduce using rule 37 (statement)


State 82

   23 INBUILT_TYPE: INTEGER_TYPE OPEN_BOX . CLOSED_BOX

    CLOSED_BOX  shift, and go to state 115


State 83

    9 variable_declaration_list: variable_declaration_list variable_declaration SEMICOLON .

    $default  reduce using rule 9 (variable_declaration_list)


State 84

    5 TypeDeclaration: CLASS IDENTIFIER OPEN_CURLY variable_declaration_list method_declaration_list CLOSED_CURLY .

    $default  reduce using rule 5 (TypeDeclaration)


State 85

   22 method_declaration: PUBLIC . TYPE IDENTIFIER OPEN_PAREN argument_list CLOSED_PAREN OPEN_CURLY method_content RETURN expression SEMICOLON CLOSED_CURLY

    IDENTIFIER    shift, and go to state 46
    INTEGER_TYPE  shift, and go to state 47
    BOOLEAN_TYPE  shift, and go to state 48

    INBUILT_TYPE  go to state 51
    TYPE          go to state 116


State 86

   15 method_declaration_list: method_declaration_list method_declaration .

    $default  reduce using rule 15 (method_declaration_list)


State 87

    7 variable_declaration: TYPE IDENTIFIER .

    $default  reduce using rule 7 (variable_declaration)


State 88

    6 TypeDeclaration: CLASS IDENTIFIER EXTENDS IDENTIFIER OPEN_CURLY variable_declaration_list . method_declaration_list CLOSED_CURLY
    9 variable_declaration_list: variable_declaration_list . variable_declaration SEMICOLON

    IDENTIFIER    shift, and go to state 46
    INTEGER_TYPE  shift, and go to state 47
    BOOLEAN_TYPE  shift, and go to state 48

    $default  reduce using rule 14 (method_declaration_list)

    variable_declaration     go to state 49
    method_declaration_list  go to state 117
    INBUILT_TYPE             go to state 51
    TYPE                     go to state 52


State 89

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING . OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    OPEN_BOX  shift, and go to state 118


State 90

   71 macro_param_list: expression . macro_extra_param_list

    $default  reduce using rule 72 (macro_extra_param_list)

    macro_extra_param_list  go to state 119


State 91

   41 macro_expression_call: IDENTIFIER OPEN_PAREN macro_param_list . CLOSED_PAREN

    CLOSED_PAREN  shift, and go to state 120


State 92

   69 prim_exp: OPEN_PAREN expression CLOSED_PAREN .

    $default  reduce using rule 69 (prim_exp)


State 93

   67 prim_exp: NEW IDENTIFIER OPEN_PAREN . CLOSED_PAREN

    CLOSED_PAREN  shift, and go to state 121


State 94

   66 prim_exp: NEW INTEGER_TYPE OPEN_BOX . expression CLOSED_BOX

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    macro_expression_call  go to state 42
    expression             go to state 122
    prim_exp               go to state 44


State 95

   64 prim_exp: IDENTIFIER .

    $default  reduce using rule 64 (prim_exp)


State 96

   53 follows_primexp: PLUS prim_exp .

    $default  reduce using rule 53 (follows_primexp)


State 97

   54 follows_primexp: MINUS prim_exp .

    $default  reduce using rule 54 (follows_primexp)


State 98

   55 follows_primexp: MULT prim_exp .

    $default  reduce using rule 55 (follows_primexp)


State 99

   56 follows_primexp: DIV prim_exp .

    $default  reduce using rule 56 (follows_primexp)


State 100

   51 follows_primexp: NOT EQUALS . prim_exp

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 95
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    prim_exp  go to state 123


State 101

   49 follows_primexp: AND prim_exp .

    $default  reduce using rule 49 (follows_primexp)


State 102

   50 follows_primexp: OR prim_exp .

    $default  reduce using rule 50 (follows_primexp)


State 103

   52 follows_primexp: LESS_THAN EQUALS . prim_exp

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 95
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    prim_exp  go to state 124


State 104

   42 function_call: IDENTIFIER . OPEN_PAREN parameter_list CLOSED_PAREN

    OPEN_PAREN  shift, and go to state 125


State 105

   60 follows_primexp: DOT function_call .

    $default  reduce using rule 60 (follows_primexp)


State 106

   57 follows_primexp: OPEN_BOX prim_exp . CLOSED_BOX

    CLOSED_BOX  shift, and go to state 126


State 107

   34 follows_identifier_in_statement: EQUALS . expression SEMICOLON

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    macro_expression_call  go to state 42
    expression             go to state 127
    prim_exp               go to state 44


State 108

   40 macro_statement_call: IDENTIFIER OPEN_PAREN . macro_param_list CLOSED_PAREN SEMICOLON

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    $default  reduce using rule 70 (macro_param_list)

    macro_expression_call  go to state 42
    expression             go to state 90
    prim_exp               go to state 44
    macro_param_list       go to state 128


State 109

   35 follows_identifier_in_statement: OPEN_BOX . expression CLOSED_BOX EQUALS expression SEMICOLON

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    macro_expression_call  go to state 42
    expression             go to state 129
    prim_exp               go to state 44


State 110

   38 statement: IDENTIFIER follows_identifier_in_statement .

    $default  reduce using rule 38 (statement)


State 111

   29 statement_list: statement_list . statement
   36 statement: OPEN_CURLY statement_list . CLOSED_CURLY

    IDENTIFIER    shift, and go to state 73
    OPEN_CURLY    shift, and go to state 74
    CLOSED_CURLY  shift, and go to state 130
    PRINT_FN      shift, and go to state 76
    IF            shift, and go to state 77
    WHILE         shift, and go to state 78

    other_statement       go to state 79
    statement             go to state 80
    macro_statement_call  go to state 81


State 112

   30 other_statement: PRINT_FN OPEN_PAREN . expression CLOSED_PAREN SEMICOLON

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    macro_expression_call  go to state 42
    expression             go to state 131
    prim_exp               go to state 44


State 113

   32 other_statement: IF OPEN_PAREN . expression CLOSED_PAREN statement ELSE statement
   33                | IF OPEN_PAREN . expression CLOSED_PAREN statement

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    macro_expression_call  go to state 42
    expression             go to state 132
    prim_exp               go to state 44


State 114

   31 other_statement: WHILE OPEN_PAREN . expression CLOSED_PAREN statement

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    macro_expression_call  go to state 42
    expression             go to state 133
    prim_exp               go to state 44


State 115

   23 INBUILT_TYPE: INTEGER_TYPE OPEN_BOX CLOSED_BOX .

    $default  reduce using rule 23 (INBUILT_TYPE)


State 116

   22 method_declaration: PUBLIC TYPE . IDENTIFIER OPEN_PAREN argument_list CLOSED_PAREN OPEN_CURLY method_content RETURN expression SEMICOLON CLOSED_CURLY

    IDENTIFIER  shift, and go to state 134


State 117

    6 TypeDeclaration: CLASS IDENTIFIER EXTENDS IDENTIFIER OPEN_CURLY variable_declaration_list method_declaration_list . CLOSED_CURLY
   15 method_declaration_list: method_declaration_list . method_declaration

    CLOSED_CURLY  shift, and go to state 135
    PUBLIC        shift, and go to state 85

    method_declaration  go to state 86


State 118

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX . CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    CLOSED_BOX  shift, and go to state 136


State 119

   71 macro_param_list: expression macro_extra_param_list .
   73 macro_extra_param_list: macro_extra_param_list . COMMA expression

    COMMA  shift, and go to state 137

    $default  reduce using rule 71 (macro_param_list)


State 120

   41 macro_expression_call: IDENTIFIER OPEN_PAREN macro_param_list CLOSED_PAREN .

    $default  reduce using rule 41 (macro_expression_call)


State 121

   67 prim_exp: NEW IDENTIFIER OPEN_PAREN CLOSED_PAREN .

    $default  reduce using rule 67 (prim_exp)


State 122

   66 prim_exp: NEW INTEGER_TYPE OPEN_BOX expression . CLOSED_BOX

    CLOSED_BOX  shift, and go to state 138


State 123

   51 follows_primexp: NOT EQUALS prim_exp .

    $default  reduce using rule 51 (follows_primexp)


State 124

   52 follows_primexp: LESS_THAN EQUALS prim_exp .

    $default  reduce using rule 52 (follows_primexp)


State 125

   42 function_call: IDENTIFIER OPEN_PAREN . parameter_list CLOSED_PAREN

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    $default  reduce using rule 43 (parameter_list)

    macro_expression_call  go to state 42
    parameter_list         go to state 139
    expression             go to state 140
    prim_exp               go to state 44


State 126

   57 follows_primexp: OPEN_BOX prim_exp CLOSED_BOX .

    $default  reduce using rule 57 (follows_primexp)


State 127

   34 follows_identifier_in_statement: EQUALS expression . SEMICOLON

    SEMICOLON  shift, and go to state 141


State 128

   40 macro_statement_call: IDENTIFIER OPEN_PAREN macro_param_list . CLOSED_PAREN SEMICOLON

    CLOSED_PAREN  shift, and go to state 142


State 129

   35 follows_identifier_in_statement: OPEN_BOX expression . CLOSED_BOX EQUALS expression SEMICOLON

    CLOSED_BOX  shift, and go to state 143


State 130

   36 statement: OPEN_CURLY statement_list CLOSED_CURLY .

    $default  reduce using rule 36 (statement)


State 131

   30 other_statement: PRINT_FN OPEN_PAREN expression . CLOSED_PAREN SEMICOLON

    CLOSED_PAREN  shift, and go to state 144


State 132

   32 other_statement: IF OPEN_PAREN expression . CLOSED_PAREN statement ELSE statement
   33                | IF OPEN_PAREN expression . CLOSED_PAREN statement

    CLOSED_PAREN  shift, and go to state 145


State 133

   31 other_statement: WHILE OPEN_PAREN expression . CLOSED_PAREN statement

    CLOSED_PAREN  shift, and go to state 146


State 134

   22 method_declaration: PUBLIC TYPE IDENTIFIER . OPEN_PAREN argument_list CLOSED_PAREN OPEN_CURLY method_content RETURN expression SEMICOLON CLOSED_CURLY

    OPEN_PAREN  shift, and go to state 147


State 135

    6 TypeDeclaration: CLASS IDENTIFIER EXTENDS IDENTIFIER OPEN_CURLY variable_declaration_list method_declaration_list CLOSED_CURLY .

    $default  reduce using rule 6 (TypeDeclaration)


State 136

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX . IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    IDENTIFIER  shift, and go to state 148


State 137

   73 macro_extra_param_list: macro_extra_param_list COMMA . expression

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    macro_expression_call  go to state 42
    expression             go to state 149
    prim_exp               go to state 44


State 138

   66 prim_exp: NEW INTEGER_TYPE OPEN_BOX expression CLOSED_BOX .

    $default  reduce using rule 66 (prim_exp)


State 139

   42 function_call: IDENTIFIER OPEN_PAREN parameter_list . CLOSED_PAREN

    CLOSED_PAREN  shift, and go to state 150


State 140

   44 parameter_list: expression . extra_parameter_list

    $default  reduce using rule 45 (extra_parameter_list)

    extra_parameter_list  go to state 151


State 141

   34 follows_identifier_in_statement: EQUALS expression SEMICOLON .

    $default  reduce using rule 34 (follows_identifier_in_statement)


State 142

   40 macro_statement_call: IDENTIFIER OPEN_PAREN macro_param_list CLOSED_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 152


State 143

   35 follows_identifier_in_statement: OPEN_BOX expression CLOSED_BOX . EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 153


State 144

   30 other_statement: PRINT_FN OPEN_PAREN expression CLOSED_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 154


State 145

   32 other_statement: IF OPEN_PAREN expression CLOSED_PAREN . statement ELSE statement
   33                | IF OPEN_PAREN expression CLOSED_PAREN . statement

    IDENTIFIER  shift, and go to state 73
    OPEN_CURLY  shift, and go to state 74
    PRINT_FN    shift, and go to state 76
    IF          shift, and go to state 77
    WHILE       shift, and go to state 78

    other_statement       go to state 79
    statement             go to state 155
    macro_statement_call  go to state 81


State 146

   31 other_statement: WHILE OPEN_PAREN expression CLOSED_PAREN . statement

    IDENTIFIER  shift, and go to state 73
    OPEN_CURLY  shift, and go to state 74
    PRINT_FN    shift, and go to state 76
    IF          shift, and go to state 77
    WHILE       shift, and go to state 78

    other_statement       go to state 79
    statement             go to state 156
    macro_statement_call  go to state 81


State 147

   22 method_declaration: PUBLIC TYPE IDENTIFIER OPEN_PAREN . argument_list CLOSED_PAREN OPEN_CURLY method_content RETURN expression SEMICOLON CLOSED_CURLY

    IDENTIFIER    shift, and go to state 46
    INTEGER_TYPE  shift, and go to state 47
    BOOLEAN_TYPE  shift, and go to state 48

    $default  reduce using rule 10 (argument_list)

    variable_declaration  go to state 157
    argument_list         go to state 158
    INBUILT_TYPE          go to state 51
    TYPE                  go to state 52


State 148

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER . CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    CLOSED_PAREN  shift, and go to state 159


State 149

   73 macro_extra_param_list: macro_extra_param_list COMMA expression .

    $default  reduce using rule 73 (macro_extra_param_list)


State 150

   42 function_call: IDENTIFIER OPEN_PAREN parameter_list CLOSED_PAREN .

    $default  reduce using rule 42 (function_call)


State 151

   44 parameter_list: expression extra_parameter_list .
   46 extra_parameter_list: extra_parameter_list . COMMA expression

    COMMA  shift, and go to state 160

    $default  reduce using rule 44 (parameter_list)


State 152

   40 macro_statement_call: IDENTIFIER OPEN_PAREN macro_param_list CLOSED_PAREN SEMICOLON .

    $default  reduce using rule 40 (macro_statement_call)


State 153

   35 follows_identifier_in_statement: OPEN_BOX expression CLOSED_BOX EQUALS . expression SEMICOLON

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    macro_expression_call  go to state 42
    expression             go to state 161
    prim_exp               go to state 44


State 154

   30 other_statement: PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON .

    $default  reduce using rule 30 (other_statement)


State 155

   32 other_statement: IF OPEN_PAREN expression CLOSED_PAREN statement . ELSE statement
   33                | IF OPEN_PAREN expression CLOSED_PAREN statement .

    ELSE  shift, and go to state 162

    $default  reduce using rule 33 (other_statement)


State 156

   31 other_statement: WHILE OPEN_PAREN expression CLOSED_PAREN statement .

    $default  reduce using rule 31 (other_statement)


State 157

   11 argument_list: variable_declaration . extra_arguments

    $default  reduce using rule 12 (extra_arguments)

    extra_arguments  go to state 163


State 158

   22 method_declaration: PUBLIC TYPE IDENTIFIER OPEN_PAREN argument_list . CLOSED_PAREN OPEN_CURLY method_content RETURN expression SEMICOLON CLOSED_CURLY

    CLOSED_PAREN  shift, and go to state 164


State 159

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN . OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    OPEN_CURLY  shift, and go to state 165


State 160

   46 extra_parameter_list: extra_parameter_list COMMA . expression

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    macro_expression_call  go to state 42
    expression             go to state 166
    prim_exp               go to state 44


State 161

   35 follows_identifier_in_statement: OPEN_BOX expression CLOSED_BOX EQUALS expression . SEMICOLON

    SEMICOLON  shift, and go to state 167


State 162

   32 other_statement: IF OPEN_PAREN expression CLOSED_PAREN statement ELSE . statement

    IDENTIFIER  shift, and go to state 73
    OPEN_CURLY  shift, and go to state 74
    PRINT_FN    shift, and go to state 76
    IF          shift, and go to state 77
    WHILE       shift, and go to state 78

    other_statement       go to state 79
    statement             go to state 168
    macro_statement_call  go to state 81


State 163

   11 argument_list: variable_declaration extra_arguments .
   13 extra_arguments: extra_arguments . COMMA variable_declaration

    COMMA  shift, and go to state 169

    $default  reduce using rule 11 (argument_list)


State 164

   22 method_declaration: PUBLIC TYPE IDENTIFIER OPEN_PAREN argument_list CLOSED_PAREN . OPEN_CURLY method_content RETURN expression SEMICOLON CLOSED_CURLY

    OPEN_CURLY  shift, and go to state 170


State 165

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY . PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    PRINT_FN  shift, and go to state 171


State 166

   46 extra_parameter_list: extra_parameter_list COMMA expression .

    $default  reduce using rule 46 (extra_parameter_list)


State 167

   35 follows_identifier_in_statement: OPEN_BOX expression CLOSED_BOX EQUALS expression SEMICOLON .

    $default  reduce using rule 35 (follows_identifier_in_statement)


State 168

   32 other_statement: IF OPEN_PAREN expression CLOSED_PAREN statement ELSE statement .

    $default  reduce using rule 32 (other_statement)


State 169

   13 extra_arguments: extra_arguments COMMA . variable_declaration

    IDENTIFIER    shift, and go to state 46
    INTEGER_TYPE  shift, and go to state 47
    BOOLEAN_TYPE  shift, and go to state 48

    variable_declaration  go to state 172
    INBUILT_TYPE          go to state 51
    TYPE                  go to state 52


State 170

   22 method_declaration: PUBLIC TYPE IDENTIFIER OPEN_PAREN argument_list CLOSED_PAREN OPEN_CURLY . method_content RETURN expression SEMICOLON CLOSED_CURLY

    IDENTIFIER    shift, and go to state 173
    PRINT_FN      shift, and go to state 76
    INTEGER_TYPE  shift, and go to state 47
    BOOLEAN_TYPE  shift, and go to state 48
    IF            shift, and go to state 77
    WHILE         shift, and go to state 78

    $default  reduce using rule 16 (method_content)

    method_content   go to state 174
    INBUILT_TYPE     go to state 175
    other_statement  go to state 176


State 171

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN . OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    OPEN_PAREN  shift, and go to state 177


State 172

   13 extra_arguments: extra_arguments COMMA variable_declaration .

    $default  reduce using rule 13 (extra_arguments)


State 173

   18 method_content: IDENTIFIER . follows_identifier_in_method

    IDENTIFIER  shift, and go to state 178
    EQUALS      shift, and go to state 107
    OPEN_BOX    shift, and go to state 109

    follows_identifier_in_method     go to state 179
    follows_identifier_in_statement  go to state 180


State 174

   22 method_declaration: PUBLIC TYPE IDENTIFIER OPEN_PAREN argument_list CLOSED_PAREN OPEN_CURLY method_content . RETURN expression SEMICOLON CLOSED_CURLY

    RETURN  shift, and go to state 181


State 175

   17 method_content: INBUILT_TYPE . IDENTIFIER SEMICOLON method_content

    IDENTIFIER  shift, and go to state 182


State 176

   19 method_content: other_statement . statement_list

    $default  reduce using rule 28 (statement_list)

    statement_list  go to state 183


State 177

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN . expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    macro_expression_call  go to state 42
    expression             go to state 184
    prim_exp               go to state 44


State 178

   21 follows_identifier_in_method: IDENTIFIER . SEMICOLON method_content

    SEMICOLON  shift, and go to state 185


State 179

   18 method_content: IDENTIFIER follows_identifier_in_method .

    $default  reduce using rule 18 (method_content)


State 180

   20 follows_identifier_in_method: follows_identifier_in_statement . statement_list

    $default  reduce using rule 28 (statement_list)

    statement_list  go to state 186


State 181

   22 method_declaration: PUBLIC TYPE IDENTIFIER OPEN_PAREN argument_list CLOSED_PAREN OPEN_CURLY method_content RETURN . expression SEMICOLON CLOSED_CURLY

    INTEGER_LITERAL  shift, and go to state 34
    IDENTIFIER       shift, and go to state 35
    NOT              shift, and go to state 36
    OPEN_PAREN       shift, and go to state 37
    TRUE_LITERAL     shift, and go to state 38
    FALSE_LITERAL    shift, and go to state 39
    THIS             shift, and go to state 40
    NEW              shift, and go to state 41

    macro_expression_call  go to state 42
    expression             go to state 187
    prim_exp               go to state 44


State 182

   17 method_content: INBUILT_TYPE IDENTIFIER . SEMICOLON method_content

    SEMICOLON  shift, and go to state 188


State 183

   19 method_content: other_statement statement_list .
   29 statement_list: statement_list . statement

    IDENTIFIER  shift, and go to state 73
    OPEN_CURLY  shift, and go to state 74
    PRINT_FN    shift, and go to state 76
    IF          shift, and go to state 77
    WHILE       shift, and go to state 78

    $default  reduce using rule 19 (method_content)

    other_statement       go to state 79
    statement             go to state 80
    macro_statement_call  go to state 81


State 184

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression . CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY

    CLOSED_PAREN  shift, and go to state 189


State 185

   21 follows_identifier_in_method: IDENTIFIER SEMICOLON . method_content

    IDENTIFIER    shift, and go to state 173
    PRINT_FN      shift, and go to state 76
    INTEGER_TYPE  shift, and go to state 47
    BOOLEAN_TYPE  shift, and go to state 48
    IF            shift, and go to state 77
    WHILE         shift, and go to state 78

    $default  reduce using rule 16 (method_content)

    method_content   go to state 190
    INBUILT_TYPE     go to state 175
    other_statement  go to state 176


State 186

   20 follows_identifier_in_method: follows_identifier_in_statement statement_list .
   29 statement_list: statement_list . statement

    IDENTIFIER  shift, and go to state 73
    OPEN_CURLY  shift, and go to state 74
    PRINT_FN    shift, and go to state 76
    IF          shift, and go to state 77
    WHILE       shift, and go to state 78

    $default  reduce using rule 20 (follows_identifier_in_method)

    other_statement       go to state 79
    statement             go to state 80
    macro_statement_call  go to state 81


State 187

   22 method_declaration: PUBLIC TYPE IDENTIFIER OPEN_PAREN argument_list CLOSED_PAREN OPEN_CURLY method_content RETURN expression . SEMICOLON CLOSED_CURLY

    SEMICOLON  shift, and go to state 191


State 188

   17 method_content: INBUILT_TYPE IDENTIFIER SEMICOLON . method_content

    IDENTIFIER    shift, and go to state 173
    PRINT_FN      shift, and go to state 76
    INTEGER_TYPE  shift, and go to state 47
    BOOLEAN_TYPE  shift, and go to state 48
    IF            shift, and go to state 77
    WHILE         shift, and go to state 78

    $default  reduce using rule 16 (method_content)

    method_content   go to state 192
    INBUILT_TYPE     go to state 175
    other_statement  go to state 176


State 189

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN . SEMICOLON CLOSED_CURLY CLOSED_CURLY

    SEMICOLON  shift, and go to state 193


State 190

   21 follows_identifier_in_method: IDENTIFIER SEMICOLON method_content .

    $default  reduce using rule 21 (follows_identifier_in_method)


State 191

   22 method_declaration: PUBLIC TYPE IDENTIFIER OPEN_PAREN argument_list CLOSED_PAREN OPEN_CURLY method_content RETURN expression SEMICOLON . CLOSED_CURLY

    CLOSED_CURLY  shift, and go to state 194


State 192

   17 method_content: INBUILT_TYPE IDENTIFIER SEMICOLON method_content .

    $default  reduce using rule 17 (method_content)


State 193

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON . CLOSED_CURLY CLOSED_CURLY

    CLOSED_CURLY  shift, and go to state 195


State 194

   22 method_declaration: PUBLIC TYPE IDENTIFIER OPEN_PAREN argument_list CLOSED_PAREN OPEN_CURLY method_content RETURN expression SEMICOLON CLOSED_CURLY .

    $default  reduce using rule 22 (method_declaration)


State 195

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY . CLOSED_CURLY

    CLOSED_CURLY  shift, and go to state 196


State 196

    2 MainClass: CLASS IDENTIFIER OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PAREN STRING OPEN_BOX CLOSED_BOX IDENTIFIER CLOSED_PAREN OPEN_CURLY PRINT_FN OPEN_PAREN expression CLOSED_PAREN SEMICOLON CLOSED_CURLY CLOSED_CURLY .

    $default  reduce using rule 2 (MainClass)
